// Generated by CoffeeScript 1.7.0
(function() {
  var Log, Stitch, compile, compileLibs, compileMods, task, utils;

  Stitch = require('../stitch');

  Log = require('../log');

  utils = require('../utils');

  compile = function(task) {
    var libs, mods, result, results, source, _i, _j, _len, _len1;
    results = [];
    mods = compileMods(task, task.src);
    libs = compileLibs(task, task.lib);
    if (!Array.isArray(mods)) {
      mods = [mods];
    }
    if (!Array.isArray(libs)) {
      libs = [libs];
    }
    results.push.apply(results, mods);
    results.push.apply(results, libs);
    if (task.bundle) {
      source = [];
      for (_i = 0, _len = results.length; _i < _len; _i++) {
        result = results[_i];
        source.push(result.source);
      }
      return result = {
        source: source.join("\n"),
        target: task.target,
        route: task.route
      };
    } else {
      for (_j = 0, _len1 = results.length; _j < _len1; _j++) {
        result = results[_j];
        result.target = "??";
        result.route = "??";
      }
      return results;
    }
  };

  compileMods = function(task, src) {
    task.stitchMods || (task.stitchMods = new Stitch(src));
    return task.stitchMods.resolve({
      bundle: task.bundle,
      commonjs: task.commonjs,
      npm: task.npm
    });
  };

  compileLibs = function(task, lib) {
    task.stitchLibs || (task.stitchLibs = new Stitch(lib));
    return task.stitchLibs.resolve({
      bundle: true,
      commonjs: false
    });
  };

  task = function() {
    return function(next, params) {
      var extra;
      if (params.watch) {
        Stitch.remove(params.watch);
      }
      extra = (this.app.argv.compress && " <b>--using compression</b>") || "";
      Log.info("- Building target: <yellow>" + this.target + "</yellow>" + extra);
      return next(null, compile(this));
    };
  };

  module.exports = task;

}).call(this);
